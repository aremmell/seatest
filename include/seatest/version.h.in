/*
 * version.h
 *
 * Author:    Ryan M. Lederman <lederman@gmail.com>
 * Copyright: Copyright (c) 2023
 * Version:   0.1.0
 * License:   The MIT License (MIT)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
#ifndef _SEATEST_VERSION_H_INCLUDED
# define _SEATEST_VERSION_H_INCLUDED

# include <stdint.h>
# include <stdbool.h>

# define SEATEST_VERSION_MAJOR  ${PROJECT_VERSION_MAJOR}
# define SEATEST_VERSION_MINOR  ${PROJECT_VERSION_MINOR}
# define SEATEST_VERSION_PATCH  ${PROJECT_VERSION_PATCH}
# define SEATEST_VERSION_SUFFIX "${PROJECT_VERSION_SUFFIX}"
# define SEATEST_VERSION_GIT    "${GIT_COMMIT_HASH}"
# define SEATEST_IS_REL_BUILD   ${PROJECT_IS_REL_BUILD}

# define _STR(n) #n
# define _SEATEST_MK_VERSTR(maj, min, patch) \
    _STR(maj) "." _STR(min) "." _STR(patch) SEATEST_VERSION_SUFFIX \
    " (" SEATEST_VERSION_GIT ")"

static inline
const char* st_get_version_string(void)
{
    return _SEATEST_MK_VERSTR(SEATEST_VERSION_MAJOR, SEATEST_VERSION_MINOR,
        SEATEST_VERSION_PATCH);
}

static inline
uint32_t st_get_version_hex(void)
{
    return (SEATEST_VERSION_MAJOR << 16 | SEATEST_VERSION_MINOR << 8 |
            SEATEST_VERSION_PATCH);
}

static inline
bool st_is_release_build(void)
{
    return SEATEST_IS_REL_BUILD;
}

#endif /* !_SEATEST_VERSION_H_INCLUDED */
